label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2)
turnx(s2, left, s)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + 2 * r
bottom <- i2$y0 - 2 * r
left <- s$y0 - 2 * r
right <- i$x1 + 2 * r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos =1)
turnx(s2, left, s)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
devtools::load_all()
roxygen2::roxygenise()
roxygen2::roxygenise()
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + 2 * r
bottom <- i2$y0 - 2 * r
left <- s$y0 - 2 * r
right <- i$x1 + 2 * r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.2)
turnx(s2, left, s)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + 2 * r
bottom <- i2$y0 - 2 * r
left <- s$y0 - 2 * r
right <- i$x1 + 2 * r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8)
turnx(s2, left, s)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + 2 * r
bottom <- i2$y0 - 2 * r
left <- s$y0 - 1 * r
right <- i$x1 + 1 * r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8)
turnx(s2, left, s)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8)
turnx(s2, left, s)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = -0.2)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.2)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1)
list(x0 = left, x1 = right, y0 = bottom, y1 = top, label_mid = "inside",
label_mid_gap = -0.1)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1)
list(x0 = left, x1 = right, y0 = bottom, y1 = top, label_mid = "inside",
label_mid_gap = -0.1)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8, label_mid = "inside",
label_mid_gap = -0.1
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8, label_mid = "inside",
label_mid_gap = -0.1)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8, label_mid = "inside",
label_mid_gap = -0.1)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1, lwd = 3)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"))
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8, label_mid = "inside",
label_mid_gap = -0.1)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1, lwd = 2)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"), pos_from = 0.2, pos_to = 0.8)
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8, label_mid = "inside",
label_mid_gap = -0.1)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1, lwd = 2)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"), pos_from = 0.2, pos_to = 0.8)
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8, label_mid = "inside",
label_mid_gap = -0.1, label_from = "top", label_to = "bottom")
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1, lwd = 2)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"), pos_from = 0.2, pos_to = 0.8)
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8, label_mid = "inside",
label_mid_gap = -0.1, label_from = "top", label_to = "bottom",
label_to_gap = -0.1)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1, lwd = 2)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
context("turn")
sis <- function() {
r <- 0.1
s <- node(0, 0, r, label = "S[1]")
i <- node(1, 0, r, label = "I[1]")
s2 <- node(0, -1, r, label = "S[2]")
i2 <- node(1, -1, r, label = "I[2]")
flow(s, i, label = expression(beta))
top <- i$y1 + r
bottom <- i2$y0 - r
left <- s$y0 -  r
right <- i$x1 + r
turny(i, top, s, label_mid = expression(gamma), arr_lty = 2)
turny(i2, bottom , s2, label_mid = "under", label_mid_gap = -0.05,
label_from = "low", label_to = "high",
label_from_pos = 0.8, label_to_pos = 0.8,
arr_col = mid_palette("bupu"), pos_from = 0.2, pos_to = 0.8)
turnx(i, right, i2, pos_from = 0.2, pos_to = 0.8, label_mid = "inside",
label_mid_gap = -0.1, label_from = "top", label_to = "bottom",
label_to_gap = -0.05, label_to_pos = 0.2)
turnx(s2, left, s, label_mid = "inside", label_mid_gap = 0.1, lwd = 2)
list(x0 = left, x1 = right, y0 = bottom, y1 = top)
}
flodia_png(sis, "tests/turn.png")
# vdiffr::expect_doppelganger("SI diagram", fig = function() flodia(si))
devtools::load_all()
vdiffr::manage_cases()
lintr::lint_package()
roxygen2::roxygenise()
lintr::lint_package()
roxygen2::roxygenise()
devtools::load_all()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::lint()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::load_all()
roxygen2::roxygenise()
#' @title plot a flodia
#' @param f flodia plot function
#' @param oma single numeric outer margin of plot, default is 1
#' @importFrom withr with_par
#' @export
flodia <- function(f, oma = 0.1) {
z <- flodia_null(f)
xlim <- c(z$x0 - oma, z$x1 + oma)
ylim <- c(z$y0 - oma, z$y1 + oma)
withr::with_par(new = list(mar = rep(0, 4), mgp = rep(0, 3), bty = "n",
oma = rep(0, 4)),
code = {
plot(0, 0, type = "n", xlim = xlim, ylim = ylim,
axes = FALSE)
f()
})
list(x0 = xlim[1], y0 = ylim[1], x1 = xlim[2], y1 = ylim[2])
}
#' @title save a flodia
#' @param f flodia plot function
#' @param filepath desired location of output eg "test.png"
#' @param width width in pixels of output (height is calculated automatically
#'  based on plot dimensions)
#' @param res resolution of plot default = 200 dpi
#' @param oma single numeric outer margin of plot, default is 0.1
#' @export
#' @importFrom grDevices png
#' @importFrom grDevices dev.off
flodia_png <- function(f, filepath, width = 1200, res = 200, oma = 0.1) {
# extract co-ordinates of flow diagram
z <- flodia_null(f)
height <- round(width * (z$y1 - z$y0) / (z$x1 - z$x0))
png(filepath, width, height, res = res)
flodia(f, oma)
dev.off()
}
#' @title run a flodia without plotting (e.g to extract co-ordinates)
#' @param f flodia plot function
#' @param args list of named arguments to plot function
#' @importFrom grDevices pdf
#' @importFrom graphics plot.new
#' @export
flodia_null <- function(f, args = NULL) {
pdf(NULL)
plot.new()
z <- do.call(f, args)
dev.off()
z
}
roxygen2::roxygenise()
roxygen2::roxygenise()
?png
